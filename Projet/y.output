Terminals unused in grammar

   COMMENTAIRE
   WHILE
   FOR
   KWTO
   IF
   ELSEIF
   NO
   ET
   OU
   SUP
   INF
   INFEGAL
   SUPEGAL
   PRINTTEXT
   '='
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: algorithm_list $end

    1 algorithm_list: algorithm_list algorithm
    2               | algorithm

    3 algorithm: TEXSCI_BEGIN '{' ID '}' '\n' zone_declarations zone_instructions TEXSCI_END

    4 zone_instructions: list_instructions
    5                  | /* empty */

    6 list_instructions: '$' instruction '$' EOI '\n' list_instructions
    7                  | '$' instruction '$' EOI '\n'

    8 instruction: instruction_affectation
    9            | instruction_fonction

   10 instruction_affectation: ID operateur_affectation expression_arithmetique

   11 instruction_fonction: MBOX '{' PRINTINT '(' '$' argument_entier '$' ')' '}'
   12                     | MBOX '{' PRINTREAL '(' '$' argument_real '$' ')' '}'

   13 argument_entier: CONSTINT
   14                | ID

   15 argument_real: CONSTFLOAT
   16              | ID

   17 expression_arithmetique: expression_arithmetique operateur_m expression_arithmetique_t
   18                        | expression_arithmetique_t

   19 expression_arithmetique_t: expression_arithmetique_t operateur_f expression_arithmetique_f
   20                          | expression_arithmetique_f

   21 expression_arithmetique_f: '(' expression_arithmetique ')'
   22                          | valeur
   23                          | ID

   24 operateur_f: DIV
   25            | MULT

   26 operateur_m: PLUS
   27            | MINUS

   28 operateur_affectation: LEFTARROW

   29 zone_declarations: zone_declaration_constante zone_declaration_input zone_declaration_output zone_declaration_global zone_declaration_local BLANKLINE '\n'

   30 zone_declaration_constante: DECLARECONSTANT '{' '$' suite_declarations_constante '$' '}' '\n'
   31                           | /* empty */

   32 zone_declaration_input: DECLAREINPUT '{' '$' suite_declarations_variable '$' '}' '\n'
   33                       | /* empty */

   34 zone_declaration_output: DECLAREOUTPUT '{' '$' declaration_variable '$' '}' '\n'
   35                        | /* empty */

   36 zone_declaration_global: DECLAREGLOBAL '{' '$' suite_declarations_variable '$' '}' '\n'
   37                        | /* empty */

   38 zone_declaration_local: DECLARELOCAL '{' '$' suite_declarations_variable '$' '}' '\n'
   39                       | /* empty */

   40 suite_declarations_constante: declaration_constante ',' suite_declarations_constante
   41                             | declaration_constante
   42                             | EMPTYSET
   43                             | /* empty */

   44 suite_declarations_variable: declaration_variable ',' suite_declarations_variable
   45                            | declaration_variable
   46                            | EMPTYSET
   47                            | /* empty */

   48 declaration_constante: ID EGAL valeur IN type

   49 declaration_variable: ID IN type

   50 valeur: CONSTINT
   51       | CONSTFLOAT
   52       | CONSTBOOL

   53 type: INTEGER
   54     | BOOLEAN
   55     | REAL


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 6 7 29 30 32 34 36 38
'$' (36) 6 7 11 12 30 32 34 36 38
'(' (40) 11 12 21
')' (41) 11 12 21
'*' (42)
'+' (43)
',' (44) 40 44
'-' (45)
'/' (47)
'=' (61)
'{' (123) 3 11 12 30 32 34 36 38
'}' (125) 3 11 12 30 32 34 36 38
error (256)
TEXSCI_BEGIN (258) 3
TEXSCI_END (259) 3
BLANKLINE (260) 29
LEFTARROW (261) 28
IN (262) 48 49
MBOX (263) 11 12
INTEGER (264) 53
COMMENTAIRE (265)
BOOLEAN (266) 54
REAL (267) 55
EMPTYSET (268) 42 46
WHILE (269)
FOR (270)
KWTO (271)
IF (272)
ELSEIF (273)
DECLARECONSTANT (274) 30
DECLAREINPUT (275) 32
DECLAREOUTPUT (276) 34
DECLAREGLOBAL (277) 36
DECLARELOCAL (278) 38
NO (279)
ET (280)
OU (281)
EGAL (282) 48
SUP (283)
INF (284)
INFEGAL (285)
SUPEGAL (286)
PRINTINT (287) 11
PRINTTEXT (288)
PRINTREAL (289) 12
CONSTINT (290) 13 50
CONSTBOOL (291) 52
DIV (292) 24
CONSTFLOAT (293) 15 51
MULT (294) 25
MINUS (295) 27
PLUS (296) 26
EOI (297) 6 7
ID (298) 3 10 14 16 23 48 49


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
algorithm_list (57)
    on left: 1 2, on right: 0 1
algorithm (58)
    on left: 3, on right: 1 2
zone_instructions (59)
    on left: 4 5, on right: 3
list_instructions (60)
    on left: 6 7, on right: 4 6
instruction (61)
    on left: 8 9, on right: 6 7
instruction_affectation (62)
    on left: 10, on right: 8
instruction_fonction (63)
    on left: 11 12, on right: 9
argument_entier (64)
    on left: 13 14, on right: 11
argument_real (65)
    on left: 15 16, on right: 12
expression_arithmetique (66)
    on left: 17 18, on right: 10 17 21
expression_arithmetique_t (67)
    on left: 19 20, on right: 17 18 19
expression_arithmetique_f (68)
    on left: 21 22 23, on right: 19 20
operateur_f (69)
    on left: 24 25, on right: 19
operateur_m (70)
    on left: 26 27, on right: 17
operateur_affectation (71)
    on left: 28, on right: 10
zone_declarations (72)
    on left: 29, on right: 3
zone_declaration_constante (73)
    on left: 30 31, on right: 29
zone_declaration_input (74)
    on left: 32 33, on right: 29
zone_declaration_output (75)
    on left: 34 35, on right: 29
zone_declaration_global (76)
    on left: 36 37, on right: 29
zone_declaration_local (77)
    on left: 38 39, on right: 29
suite_declarations_constante (78)
    on left: 40 41 42 43, on right: 30 40
suite_declarations_variable (79)
    on left: 44 45 46 47, on right: 32 36 38 44
declaration_constante (80)
    on left: 48, on right: 40 41
declaration_variable (81)
    on left: 49, on right: 34 44 45
valeur (82)
    on left: 50 51 52, on right: 22 48
type (83)
    on left: 53 54 55, on right: 48 49


state 0

    0 $accept: . algorithm_list $end

    TEXSCI_BEGIN  shift, and go to state 1

    algorithm_list  go to state 2
    algorithm       go to state 3


state 1

    3 algorithm: TEXSCI_BEGIN . '{' ID '}' '\n' zone_declarations zone_instructions TEXSCI_END

    '{'  shift, and go to state 4


state 2

    0 $accept: algorithm_list . $end
    1 algorithm_list: algorithm_list . algorithm

    $end          shift, and go to state 5
    TEXSCI_BEGIN  shift, and go to state 1

    algorithm  go to state 6


state 3

    2 algorithm_list: algorithm .

    $default  reduce using rule 2 (algorithm_list)


state 4

    3 algorithm: TEXSCI_BEGIN '{' . ID '}' '\n' zone_declarations zone_instructions TEXSCI_END

    ID  shift, and go to state 7


state 5

    0 $accept: algorithm_list $end .

    $default  accept


state 6

    1 algorithm_list: algorithm_list algorithm .

    $default  reduce using rule 1 (algorithm_list)


state 7

    3 algorithm: TEXSCI_BEGIN '{' ID . '}' '\n' zone_declarations zone_instructions TEXSCI_END

    '}'  shift, and go to state 8


state 8

    3 algorithm: TEXSCI_BEGIN '{' ID '}' . '\n' zone_declarations zone_instructions TEXSCI_END

    '\n'  shift, and go to state 9


state 9

    3 algorithm: TEXSCI_BEGIN '{' ID '}' '\n' . zone_declarations zone_instructions TEXSCI_END

    DECLARECONSTANT  shift, and go to state 10

    $default  reduce using rule 31 (zone_declaration_constante)

    zone_declarations           go to state 11
    zone_declaration_constante  go to state 12


state 10

   30 zone_declaration_constante: DECLARECONSTANT . '{' '$' suite_declarations_constante '$' '}' '\n'

    '{'  shift, and go to state 13


state 11

    3 algorithm: TEXSCI_BEGIN '{' ID '}' '\n' zone_declarations . zone_instructions TEXSCI_END

    '$'  shift, and go to state 14

    $default  reduce using rule 5 (zone_instructions)

    zone_instructions  go to state 15
    list_instructions  go to state 16


state 12

   29 zone_declarations: zone_declaration_constante . zone_declaration_input zone_declaration_output zone_declaration_global zone_declaration_local BLANKLINE '\n'

    DECLAREINPUT  shift, and go to state 17

    $default  reduce using rule 33 (zone_declaration_input)

    zone_declaration_input  go to state 18


state 13

   30 zone_declaration_constante: DECLARECONSTANT '{' . '$' suite_declarations_constante '$' '}' '\n'

    '$'  shift, and go to state 19


state 14

    6 list_instructions: '$' . instruction '$' EOI '\n' list_instructions
    7                  | '$' . instruction '$' EOI '\n'

    MBOX  shift, and go to state 20
    ID    shift, and go to state 21

    instruction              go to state 22
    instruction_affectation  go to state 23
    instruction_fonction     go to state 24


state 15

    3 algorithm: TEXSCI_BEGIN '{' ID '}' '\n' zone_declarations zone_instructions . TEXSCI_END

    TEXSCI_END  shift, and go to state 25


state 16

    4 zone_instructions: list_instructions .

    $default  reduce using rule 4 (zone_instructions)


state 17

   32 zone_declaration_input: DECLAREINPUT . '{' '$' suite_declarations_variable '$' '}' '\n'

    '{'  shift, and go to state 26


state 18

   29 zone_declarations: zone_declaration_constante zone_declaration_input . zone_declaration_output zone_declaration_global zone_declaration_local BLANKLINE '\n'

    DECLAREOUTPUT  shift, and go to state 27

    $default  reduce using rule 35 (zone_declaration_output)

    zone_declaration_output  go to state 28


state 19

   30 zone_declaration_constante: DECLARECONSTANT '{' '$' . suite_declarations_constante '$' '}' '\n'

    EMPTYSET  shift, and go to state 29
    ID        shift, and go to state 30

    $default  reduce using rule 43 (suite_declarations_constante)

    suite_declarations_constante  go to state 31
    declaration_constante         go to state 32


state 20

   11 instruction_fonction: MBOX . '{' PRINTINT '(' '$' argument_entier '$' ')' '}'
   12                     | MBOX . '{' PRINTREAL '(' '$' argument_real '$' ')' '}'

    '{'  shift, and go to state 33


state 21

   10 instruction_affectation: ID . operateur_affectation expression_arithmetique

    LEFTARROW  shift, and go to state 34

    operateur_affectation  go to state 35


state 22

    6 list_instructions: '$' instruction . '$' EOI '\n' list_instructions
    7                  | '$' instruction . '$' EOI '\n'

    '$'  shift, and go to state 36


state 23

    8 instruction: instruction_affectation .

    $default  reduce using rule 8 (instruction)


state 24

    9 instruction: instruction_fonction .

    $default  reduce using rule 9 (instruction)


state 25

    3 algorithm: TEXSCI_BEGIN '{' ID '}' '\n' zone_declarations zone_instructions TEXSCI_END .

    $default  reduce using rule 3 (algorithm)


state 26

   32 zone_declaration_input: DECLAREINPUT '{' . '$' suite_declarations_variable '$' '}' '\n'

    '$'  shift, and go to state 37


state 27

   34 zone_declaration_output: DECLAREOUTPUT . '{' '$' declaration_variable '$' '}' '\n'

    '{'  shift, and go to state 38


state 28

   29 zone_declarations: zone_declaration_constante zone_declaration_input zone_declaration_output . zone_declaration_global zone_declaration_local BLANKLINE '\n'

    DECLAREGLOBAL  shift, and go to state 39

    $default  reduce using rule 37 (zone_declaration_global)

    zone_declaration_global  go to state 40


state 29

   42 suite_declarations_constante: EMPTYSET .

    $default  reduce using rule 42 (suite_declarations_constante)


state 30

   48 declaration_constante: ID . EGAL valeur IN type

    EGAL  shift, and go to state 41


state 31

   30 zone_declaration_constante: DECLARECONSTANT '{' '$' suite_declarations_constante . '$' '}' '\n'

    '$'  shift, and go to state 42


state 32

   40 suite_declarations_constante: declaration_constante . ',' suite_declarations_constante
   41                             | declaration_constante .

    ','  shift, and go to state 43

    $default  reduce using rule 41 (suite_declarations_constante)


state 33

   11 instruction_fonction: MBOX '{' . PRINTINT '(' '$' argument_entier '$' ')' '}'
   12                     | MBOX '{' . PRINTREAL '(' '$' argument_real '$' ')' '}'

    PRINTINT   shift, and go to state 44
    PRINTREAL  shift, and go to state 45


state 34

   28 operateur_affectation: LEFTARROW .

    $default  reduce using rule 28 (operateur_affectation)


state 35

   10 instruction_affectation: ID operateur_affectation . expression_arithmetique

    CONSTINT    shift, and go to state 46
    CONSTBOOL   shift, and go to state 47
    CONSTFLOAT  shift, and go to state 48
    ID          shift, and go to state 49
    '('         shift, and go to state 50

    expression_arithmetique    go to state 51
    expression_arithmetique_t  go to state 52
    expression_arithmetique_f  go to state 53
    valeur                     go to state 54


state 36

    6 list_instructions: '$' instruction '$' . EOI '\n' list_instructions
    7                  | '$' instruction '$' . EOI '\n'

    EOI  shift, and go to state 55


state 37

   32 zone_declaration_input: DECLAREINPUT '{' '$' . suite_declarations_variable '$' '}' '\n'

    EMPTYSET  shift, and go to state 56
    ID        shift, and go to state 57

    $default  reduce using rule 47 (suite_declarations_variable)

    suite_declarations_variable  go to state 58
    declaration_variable         go to state 59


state 38

   34 zone_declaration_output: DECLAREOUTPUT '{' . '$' declaration_variable '$' '}' '\n'

    '$'  shift, and go to state 60


state 39

   36 zone_declaration_global: DECLAREGLOBAL . '{' '$' suite_declarations_variable '$' '}' '\n'

    '{'  shift, and go to state 61


state 40

   29 zone_declarations: zone_declaration_constante zone_declaration_input zone_declaration_output zone_declaration_global . zone_declaration_local BLANKLINE '\n'

    DECLARELOCAL  shift, and go to state 62

    $default  reduce using rule 39 (zone_declaration_local)

    zone_declaration_local  go to state 63


state 41

   48 declaration_constante: ID EGAL . valeur IN type

    CONSTINT    shift, and go to state 46
    CONSTBOOL   shift, and go to state 47
    CONSTFLOAT  shift, and go to state 48

    valeur  go to state 64


state 42

   30 zone_declaration_constante: DECLARECONSTANT '{' '$' suite_declarations_constante '$' . '}' '\n'

    '}'  shift, and go to state 65


state 43

   40 suite_declarations_constante: declaration_constante ',' . suite_declarations_constante

    EMPTYSET  shift, and go to state 29
    ID        shift, and go to state 30

    $default  reduce using rule 43 (suite_declarations_constante)

    suite_declarations_constante  go to state 66
    declaration_constante         go to state 32


state 44

   11 instruction_fonction: MBOX '{' PRINTINT . '(' '$' argument_entier '$' ')' '}'

    '('  shift, and go to state 67


state 45

   12 instruction_fonction: MBOX '{' PRINTREAL . '(' '$' argument_real '$' ')' '}'

    '('  shift, and go to state 68


state 46

   50 valeur: CONSTINT .

    $default  reduce using rule 50 (valeur)


state 47

   52 valeur: CONSTBOOL .

    $default  reduce using rule 52 (valeur)


state 48

   51 valeur: CONSTFLOAT .

    $default  reduce using rule 51 (valeur)


state 49

   23 expression_arithmetique_f: ID .

    $default  reduce using rule 23 (expression_arithmetique_f)


state 50

   21 expression_arithmetique_f: '(' . expression_arithmetique ')'

    CONSTINT    shift, and go to state 46
    CONSTBOOL   shift, and go to state 47
    CONSTFLOAT  shift, and go to state 48
    ID          shift, and go to state 49
    '('         shift, and go to state 50

    expression_arithmetique    go to state 69
    expression_arithmetique_t  go to state 52
    expression_arithmetique_f  go to state 53
    valeur                     go to state 54


state 51

   10 instruction_affectation: ID operateur_affectation expression_arithmetique .
   17 expression_arithmetique: expression_arithmetique . operateur_m expression_arithmetique_t

    MINUS  shift, and go to state 70
    PLUS   shift, and go to state 71

    $default  reduce using rule 10 (instruction_affectation)

    operateur_m  go to state 72


state 52

   18 expression_arithmetique: expression_arithmetique_t .
   19 expression_arithmetique_t: expression_arithmetique_t . operateur_f expression_arithmetique_f

    DIV   shift, and go to state 73
    MULT  shift, and go to state 74

    $default  reduce using rule 18 (expression_arithmetique)

    operateur_f  go to state 75


state 53

   20 expression_arithmetique_t: expression_arithmetique_f .

    $default  reduce using rule 20 (expression_arithmetique_t)


state 54

   22 expression_arithmetique_f: valeur .

    $default  reduce using rule 22 (expression_arithmetique_f)


state 55

    6 list_instructions: '$' instruction '$' EOI . '\n' list_instructions
    7                  | '$' instruction '$' EOI . '\n'

    '\n'  shift, and go to state 76


state 56

   46 suite_declarations_variable: EMPTYSET .

    $default  reduce using rule 46 (suite_declarations_variable)


state 57

   49 declaration_variable: ID . IN type

    IN  shift, and go to state 77


state 58

   32 zone_declaration_input: DECLAREINPUT '{' '$' suite_declarations_variable . '$' '}' '\n'

    '$'  shift, and go to state 78


state 59

   44 suite_declarations_variable: declaration_variable . ',' suite_declarations_variable
   45                            | declaration_variable .

    ','  shift, and go to state 79

    $default  reduce using rule 45 (suite_declarations_variable)


state 60

   34 zone_declaration_output: DECLAREOUTPUT '{' '$' . declaration_variable '$' '}' '\n'

    ID  shift, and go to state 57

    declaration_variable  go to state 80


state 61

   36 zone_declaration_global: DECLAREGLOBAL '{' . '$' suite_declarations_variable '$' '}' '\n'

    '$'  shift, and go to state 81


state 62

   38 zone_declaration_local: DECLARELOCAL . '{' '$' suite_declarations_variable '$' '}' '\n'

    '{'  shift, and go to state 82


state 63

   29 zone_declarations: zone_declaration_constante zone_declaration_input zone_declaration_output zone_declaration_global zone_declaration_local . BLANKLINE '\n'

    BLANKLINE  shift, and go to state 83


state 64

   48 declaration_constante: ID EGAL valeur . IN type

    IN  shift, and go to state 84


state 65

   30 zone_declaration_constante: DECLARECONSTANT '{' '$' suite_declarations_constante '$' '}' . '\n'

    '\n'  shift, and go to state 85


state 66

   40 suite_declarations_constante: declaration_constante ',' suite_declarations_constante .

    $default  reduce using rule 40 (suite_declarations_constante)


state 67

   11 instruction_fonction: MBOX '{' PRINTINT '(' . '$' argument_entier '$' ')' '}'

    '$'  shift, and go to state 86


state 68

   12 instruction_fonction: MBOX '{' PRINTREAL '(' . '$' argument_real '$' ')' '}'

    '$'  shift, and go to state 87


state 69

   17 expression_arithmetique: expression_arithmetique . operateur_m expression_arithmetique_t
   21 expression_arithmetique_f: '(' expression_arithmetique . ')'

    MINUS  shift, and go to state 70
    PLUS   shift, and go to state 71
    ')'    shift, and go to state 88

    operateur_m  go to state 72


state 70

   27 operateur_m: MINUS .

    $default  reduce using rule 27 (operateur_m)


state 71

   26 operateur_m: PLUS .

    $default  reduce using rule 26 (operateur_m)


state 72

   17 expression_arithmetique: expression_arithmetique operateur_m . expression_arithmetique_t

    CONSTINT    shift, and go to state 46
    CONSTBOOL   shift, and go to state 47
    CONSTFLOAT  shift, and go to state 48
    ID          shift, and go to state 49
    '('         shift, and go to state 50

    expression_arithmetique_t  go to state 89
    expression_arithmetique_f  go to state 53
    valeur                     go to state 54


state 73

   24 operateur_f: DIV .

    $default  reduce using rule 24 (operateur_f)


state 74

   25 operateur_f: MULT .

    $default  reduce using rule 25 (operateur_f)


state 75

   19 expression_arithmetique_t: expression_arithmetique_t operateur_f . expression_arithmetique_f

    CONSTINT    shift, and go to state 46
    CONSTBOOL   shift, and go to state 47
    CONSTFLOAT  shift, and go to state 48
    ID          shift, and go to state 49
    '('         shift, and go to state 50

    expression_arithmetique_f  go to state 90
    valeur                     go to state 54


state 76

    6 list_instructions: '$' instruction '$' EOI '\n' . list_instructions
    7                  | '$' instruction '$' EOI '\n' .

    '$'  shift, and go to state 14

    $default  reduce using rule 7 (list_instructions)

    list_instructions  go to state 91


state 77

   49 declaration_variable: ID IN . type

    INTEGER  shift, and go to state 92
    BOOLEAN  shift, and go to state 93
    REAL     shift, and go to state 94

    type  go to state 95


state 78

   32 zone_declaration_input: DECLAREINPUT '{' '$' suite_declarations_variable '$' . '}' '\n'

    '}'  shift, and go to state 96


state 79

   44 suite_declarations_variable: declaration_variable ',' . suite_declarations_variable

    EMPTYSET  shift, and go to state 56
    ID        shift, and go to state 57

    $default  reduce using rule 47 (suite_declarations_variable)

    suite_declarations_variable  go to state 97
    declaration_variable         go to state 59


state 80

   34 zone_declaration_output: DECLAREOUTPUT '{' '$' declaration_variable . '$' '}' '\n'

    '$'  shift, and go to state 98


state 81

   36 zone_declaration_global: DECLAREGLOBAL '{' '$' . suite_declarations_variable '$' '}' '\n'

    EMPTYSET  shift, and go to state 56
    ID        shift, and go to state 57

    $default  reduce using rule 47 (suite_declarations_variable)

    suite_declarations_variable  go to state 99
    declaration_variable         go to state 59


state 82

   38 zone_declaration_local: DECLARELOCAL '{' . '$' suite_declarations_variable '$' '}' '\n'

    '$'  shift, and go to state 100


state 83

   29 zone_declarations: zone_declaration_constante zone_declaration_input zone_declaration_output zone_declaration_global zone_declaration_local BLANKLINE . '\n'

    '\n'  shift, and go to state 101


state 84

   48 declaration_constante: ID EGAL valeur IN . type

    INTEGER  shift, and go to state 92
    BOOLEAN  shift, and go to state 93
    REAL     shift, and go to state 94

    type  go to state 102


state 85

   30 zone_declaration_constante: DECLARECONSTANT '{' '$' suite_declarations_constante '$' '}' '\n' .

    $default  reduce using rule 30 (zone_declaration_constante)


state 86

   11 instruction_fonction: MBOX '{' PRINTINT '(' '$' . argument_entier '$' ')' '}'

    CONSTINT  shift, and go to state 103
    ID        shift, and go to state 104

    argument_entier  go to state 105


state 87

   12 instruction_fonction: MBOX '{' PRINTREAL '(' '$' . argument_real '$' ')' '}'

    CONSTFLOAT  shift, and go to state 106
    ID          shift, and go to state 107

    argument_real  go to state 108


state 88

   21 expression_arithmetique_f: '(' expression_arithmetique ')' .

    $default  reduce using rule 21 (expression_arithmetique_f)


state 89

   17 expression_arithmetique: expression_arithmetique operateur_m expression_arithmetique_t .
   19 expression_arithmetique_t: expression_arithmetique_t . operateur_f expression_arithmetique_f

    DIV   shift, and go to state 73
    MULT  shift, and go to state 74

    $default  reduce using rule 17 (expression_arithmetique)

    operateur_f  go to state 75


state 90

   19 expression_arithmetique_t: expression_arithmetique_t operateur_f expression_arithmetique_f .

    $default  reduce using rule 19 (expression_arithmetique_t)


state 91

    6 list_instructions: '$' instruction '$' EOI '\n' list_instructions .

    $default  reduce using rule 6 (list_instructions)


state 92

   53 type: INTEGER .

    $default  reduce using rule 53 (type)


state 93

   54 type: BOOLEAN .

    $default  reduce using rule 54 (type)


state 94

   55 type: REAL .

    $default  reduce using rule 55 (type)


state 95

   49 declaration_variable: ID IN type .

    $default  reduce using rule 49 (declaration_variable)


state 96

   32 zone_declaration_input: DECLAREINPUT '{' '$' suite_declarations_variable '$' '}' . '\n'

    '\n'  shift, and go to state 109


state 97

   44 suite_declarations_variable: declaration_variable ',' suite_declarations_variable .

    $default  reduce using rule 44 (suite_declarations_variable)


state 98

   34 zone_declaration_output: DECLAREOUTPUT '{' '$' declaration_variable '$' . '}' '\n'

    '}'  shift, and go to state 110


state 99

   36 zone_declaration_global: DECLAREGLOBAL '{' '$' suite_declarations_variable . '$' '}' '\n'

    '$'  shift, and go to state 111


state 100

   38 zone_declaration_local: DECLARELOCAL '{' '$' . suite_declarations_variable '$' '}' '\n'

    EMPTYSET  shift, and go to state 56
    ID        shift, and go to state 57

    $default  reduce using rule 47 (suite_declarations_variable)

    suite_declarations_variable  go to state 112
    declaration_variable         go to state 59


state 101

   29 zone_declarations: zone_declaration_constante zone_declaration_input zone_declaration_output zone_declaration_global zone_declaration_local BLANKLINE '\n' .

    $default  reduce using rule 29 (zone_declarations)


state 102

   48 declaration_constante: ID EGAL valeur IN type .

    $default  reduce using rule 48 (declaration_constante)


state 103

   13 argument_entier: CONSTINT .

    $default  reduce using rule 13 (argument_entier)


state 104

   14 argument_entier: ID .

    $default  reduce using rule 14 (argument_entier)


state 105

   11 instruction_fonction: MBOX '{' PRINTINT '(' '$' argument_entier . '$' ')' '}'

    '$'  shift, and go to state 113


state 106

   15 argument_real: CONSTFLOAT .

    $default  reduce using rule 15 (argument_real)


state 107

   16 argument_real: ID .

    $default  reduce using rule 16 (argument_real)


state 108

   12 instruction_fonction: MBOX '{' PRINTREAL '(' '$' argument_real . '$' ')' '}'

    '$'  shift, and go to state 114


state 109

   32 zone_declaration_input: DECLAREINPUT '{' '$' suite_declarations_variable '$' '}' '\n' .

    $default  reduce using rule 32 (zone_declaration_input)


state 110

   34 zone_declaration_output: DECLAREOUTPUT '{' '$' declaration_variable '$' '}' . '\n'

    '\n'  shift, and go to state 115


state 111

   36 zone_declaration_global: DECLAREGLOBAL '{' '$' suite_declarations_variable '$' . '}' '\n'

    '}'  shift, and go to state 116


state 112

   38 zone_declaration_local: DECLARELOCAL '{' '$' suite_declarations_variable . '$' '}' '\n'

    '$'  shift, and go to state 117


state 113

   11 instruction_fonction: MBOX '{' PRINTINT '(' '$' argument_entier '$' . ')' '}'

    ')'  shift, and go to state 118


state 114

   12 instruction_fonction: MBOX '{' PRINTREAL '(' '$' argument_real '$' . ')' '}'

    ')'  shift, and go to state 119


state 115

   34 zone_declaration_output: DECLAREOUTPUT '{' '$' declaration_variable '$' '}' '\n' .

    $default  reduce using rule 34 (zone_declaration_output)


state 116

   36 zone_declaration_global: DECLAREGLOBAL '{' '$' suite_declarations_variable '$' '}' . '\n'

    '\n'  shift, and go to state 120


state 117

   38 zone_declaration_local: DECLARELOCAL '{' '$' suite_declarations_variable '$' . '}' '\n'

    '}'  shift, and go to state 121


state 118

   11 instruction_fonction: MBOX '{' PRINTINT '(' '$' argument_entier '$' ')' . '}'

    '}'  shift, and go to state 122


state 119

   12 instruction_fonction: MBOX '{' PRINTREAL '(' '$' argument_real '$' ')' . '}'

    '}'  shift, and go to state 123


state 120

   36 zone_declaration_global: DECLAREGLOBAL '{' '$' suite_declarations_variable '$' '}' '\n' .

    $default  reduce using rule 36 (zone_declaration_global)


state 121

   38 zone_declaration_local: DECLARELOCAL '{' '$' suite_declarations_variable '$' '}' . '\n'

    '\n'  shift, and go to state 124


state 122

   11 instruction_fonction: MBOX '{' PRINTINT '(' '$' argument_entier '$' ')' '}' .

    $default  reduce using rule 11 (instruction_fonction)


state 123

   12 instruction_fonction: MBOX '{' PRINTREAL '(' '$' argument_real '$' ')' '}' .

    $default  reduce using rule 12 (instruction_fonction)


state 124

   38 zone_declaration_local: DECLARELOCAL '{' '$' suite_declarations_variable '$' '}' '\n' .

    $default  reduce using rule 38 (zone_declaration_local)
